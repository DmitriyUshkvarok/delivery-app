{"version":3,"file":"static/js/901.389dcbdb.chunk.js","mappings":"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","sources":["Pages/HomePage/HomePage.styled.js","Pages/HomePage/HomePage.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","firebase/config.js"],"sourcesContent":["import styled from 'styled-components';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { RiCheckboxCircleLine } from 'react-icons/ri';\n\nexport const OrderForm = styled.form`\n  max-width: 450px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  gap: 5px;\n  box-shadow: var(--box-shadow-header);\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: var(--border-radius);\n`;\nexport const OrderFormTitle = styled.h2`\n  color: aqua;\n  font-weight: bold;\n  text-shadow: var(--text-shadow);\n  text-align: center;\n`;\n\nexport const OrderFormGroup = styled.div`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputName = styled.input`\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  padding: 5px;\n`;\nexport const InputPhone = styled.input`\n  display: flex;\n  padding: 5px;\n  width: 100%;\n  /* max-width: 400px;  */\n`;\nexport const InputEmail = styled.input`\n  display: flex;\n  padding: 5px;\n  width: 100%;\n  /* max-width: 400px;  */\n`;\nexport const InputAdress = styled.input`\n  display: flex;\n  padding: 5px;\n  width: 100%;\n  /* width: 100%;\n  max-width: 400px; */\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n`;\n\nexport const HomePageTitle = styled.h1`\n  margin-top: 130px;\n  text-align: center;\n  max-width: 400px;\n  font-size: 37px;\n  letter-spacing: 1px;\n  color: aqua;\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  text-shadow: var(--text-shadow);\n  border-radius: 10px;\n  box-shadow: var(--box-shadow-header);\n`;\n\nexport const FoodList = styled.ul`\n  margin-top: 30px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  margin-bottom: 90px;\n`;\n\nexport const FoodItem = styled.li`\n  position: relative;\n  background-image: var(--background-movies-item);\n  width: 100%;\n  max-width: 300px;\n  height: 150px;\n  padding: 5px;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow-header);\n`;\n\nexport const FoodItemImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  margin-bottom: 5px;\n  border-radius: var(--border-radius);\n`;\n\nexport const InfoFoodWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nexport const FoodItemName = styled.h3`\n  font-size: 14px;\n  letter-spacing: 2px;\n  color: gold;\n  text-shadow: var(--text-shadow);\n`;\n\nexport const FoodItemPrice = styled.span`\n  margin-left: auto;\n  display: block;\n  color: aqua;\n  font-weight: bold;\n  text-shadow: var(--text-shadow);\n`;\n\nexport const ToggleOrder = styled.button`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const StyleMdAddShoppingCart = styled(MdAddShoppingCart)`\n  cursor: pointer;\n  transition: fill var(--transition);\n\n  &:hover {\n    color: var(--color-title);\n    fill: var(--color-title);\n  }\n`;\n\nexport const StyleOkCheck = styled(RiCheckboxCircleLine)`\n  cursor: pointer;\n  transition: fill var(--transition);\n\n  &:hover {\n    color: var(--color-title);\n    fill: var(--color-title);\n  }\n`;\n\nexport const CounterWrapper = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: var(--border-radius);\n`;\n\nexport const BtnIncrement = styled.button`\n  width: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color: aqua;\n  text-shadow: var(--text-shadow);\n`;\n\nexport const InputCounter = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10px;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color: aqua;\n  text-shadow: var(--text-shadow);\n`;\n\nexport const BtnDecrement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 10px;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color: aqua;\n  text-shadow: var(--text-shadow);\n`;\n","import Header from 'components/Header/Header';\nimport {\n  OrderForm,\n  OrderFormTitle,\n  OrderFormGroup,\n  InputName,\n  InputPhone,\n  InputEmail,\n  InputAdress,\n  HeaderWrapper,\n  HomePageTitle,\n  FoodList,\n  FoodItem,\n  FoodItemImage,\n  InfoFoodWrapper,\n  FoodItemName,\n  FoodItemPrice,\n  ToggleOrder,\n  StyleMdAddShoppingCart,\n  StyleOkCheck,\n  CounterWrapper,\n  BtnIncrement,\n  InputCounter,\n  BtnDecrement,\n} from './HomePage.styled';\nimport delivery from '../../DATA/delivery.json';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect, useRef } from 'react';\nimport { firestore } from '../../firebase/config';\nimport { collection, addDoc, query, getDocs, where } from 'firebase/firestore';\nimport { format } from 'date-fns';\n\nconst HomePage = () => {\n  const [selectedItems, setSelectedItems] = useState(\n    JSON.parse(localStorage.getItem('selectedItems')) || []\n  );\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(\n    JSON.parse(localStorage.getItem('countItems')) || 0\n  );\n  const [productLoading, setProductLoading] = useState([]);\n  const [orderCount, setOrderCount] = useState(0);\n  const [formValues, setFormValues] = useState({\n    userName: '',\n    email: '',\n    number: '',\n    address: '',\n  });\n\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    const getCountOfOrders = async () => {\n      try {\n        const q = query(\n          collection(firestore, 'products'),\n          where('selected', '==', true)\n        );\n        const querySnapshot = await getDocs(q);\n        const count = querySnapshot.size;\n\n        setOrderCount(count);\n      } catch (error) {\n        console.error('Error getting count of orders:', error);\n      }\n    };\n\n    getCountOfOrders();\n\n    const interval = setInterval(() => {\n      getCountOfOrders();\n    }, 5000);\n\n    return () => {\n      clearInterval(interval);\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('selectedItems', JSON.stringify(selectedItems));\n    localStorage.setItem('countItems', JSON.stringify(count));\n  }, [selectedItems, count]);\n\n  // смена иконки и блокировка иконки добавить продукт если не выбрано количество товара\n  const handleOrderToggleFood = async itemId => {\n    if (selectedItems.includes(itemId)) {\n      return;\n    }\n\n    if (!count[itemId]) {\n      toast.warning('Select a product quantity');\n      return;\n    }\n\n    await addProductToDb(itemId);\n    setSelectedItems(prev => [...prev, itemId]);\n  };\n\n  // добавить обьект в базу данных firestore\n  const addProductToDb = async id => {\n    const date = new Date();\n    const formatData = format(new Date(date), 'dd MMMM, yyyy | HH:mm');\n    try {\n      setProductLoading(prevLoading => ({\n        ...prevLoading,\n        [id]: true,\n      }));\n\n      setLoading(true);\n      const selectedItem = delivery.items.find(item => item.id === id);\n      if (selectedItem) {\n        await addDoc(collection(firestore, 'products'), {\n          name: selectedItem.name,\n          price: selectedItem.price,\n          image: selectedItem.image || 'https://dummyimage.com/200x300/fff/aaa',\n          selected: true,\n          count: count[id] || 0,\n          order: orderCount,\n          ...formValues,\n          formatData,\n        });\n        toast.success('Product added successfully');\n      } else {\n        toast.error('Failed to add product');\n      }\n    } catch (error) {\n      toast.error('Error adding product to Firestore');\n    } finally {\n      setProductLoading(prevLoading => ({\n        ...prevLoading,\n        [id]: false,\n      }));\n      setLoading(false);\n    }\n  };\n\n  // добавить количество  товаров для заказа\n  const handleIncrement = itemId => {\n    setCount(prevCounts => ({\n      ...prevCounts,\n      [itemId]: (prevCounts[itemId] || 0) + 1,\n    }));\n  };\n\n  // убавить количество товаров для заказа\n  const handleDecrement = itemId => {\n    setCount(prevCounts => {\n      const newCount = (prevCounts[itemId] || 0) - 1;\n      return {\n        ...prevCounts,\n        [itemId]: newCount >= 0 ? newCount : 0,\n      };\n    });\n  };\n\n  // значения инпутов формы\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFormValues(prevValues => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <HeaderWrapper>\n        <Header orderCount={orderCount} />\n      </HeaderWrapper>\n      <HomePageTitle>Food delivery anywhere in the city</HomePageTitle>\n      <OrderForm>\n        <OrderFormTitle>Enter your information</OrderFormTitle>\n        <OrderFormGroup>\n          <InputName\n            value={formValues.userName}\n            onChange={handleInputChange}\n            placeholder=\"name\"\n            type=\"text\"\n            name=\"userName\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </OrderFormGroup>\n        <OrderFormGroup>\n          <InputPhone\n            value={formValues.number}\n            onChange={handleInputChange}\n            placeholder=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </OrderFormGroup>\n        <OrderFormGroup>\n          <InputEmail\n            value={formValues.email}\n            onChange={handleInputChange}\n            placeholder=\"email\"\n            type=\"mail\"\n            name=\"email\"\n            required\n          />\n        </OrderFormGroup>\n        <OrderFormGroup>\n          <InputAdress\n            value={formValues.address}\n            onChange={handleInputChange}\n            placeholder=\"address\"\n            type=\"text\"\n            name=\"address\"\n            required\n          />\n        </OrderFormGroup>\n      </OrderForm>\n      <FoodList>\n        {delivery.items.map(item => (\n          <FoodItem key={item.id}>\n            <FoodItemImage\n              src={\n                item.image\n                  ? item.image\n                  : 'https://dummyimage.com/200x300/fff/aaa'\n              }\n              alt={item.name}\n            />\n            <InfoFoodWrapper>\n              <FoodItemName>{item.name}</FoodItemName>\n              <FoodItemPrice>${item.price}</FoodItemPrice>\n            </InfoFoodWrapper>\n            {productLoading[item.id] ? (\n              <p\n                style={{\n                  color: 'aqua',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  position: 'absolute',\n                  zIndex: '10',\n                  top: '10px',\n                  right: '10px',\n                }}\n              >\n                Adding...\n              </p>\n            ) : (\n              <ToggleOrder\n                onClick={() => handleOrderToggleFood(item.id)}\n                disabled={\n                  (loading || selectedItems.includes(item.id),\n                  count[item.id] === 0)\n                }\n              >\n                {selectedItems.includes(item.id) ? (\n                  <StyleOkCheck size={30} color=\"green\" />\n                ) : (\n                  <StyleMdAddShoppingCart size={30} color=\"gold\" />\n                )}\n              </ToggleOrder>\n            )}\n\n            <CounterWrapper>\n              <BtnIncrement\n                type=\"button\"\n                onClick={() => handleIncrement(item.id)}\n              >\n                +\n              </BtnIncrement>\n              <InputCounter\n                type=\"text\"\n                name=\"counter\"\n                value={count[item.id] || 0}\n                readOnly\n              />\n              <BtnDecrement\n                type=\"button\"\n                onClick={() => handleDecrement(item.id)}\n              >\n                -\n              </BtnDecrement>\n            </CounterWrapper>\n          </FoodItem>\n        ))}\n      </FoodList>\n    </>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyleNavigation = styled.nav`\n  width: 100%;\n  display: flex;\n`;\n\nexport const NavigationList = styled.ul`\n  width: 100%;\n  max-width: 300px;\n  display: flex;\n  gap: 25px;\n`;\n\nexport const NavigationItem = styled.li`\n  cursor: pointer;\n`;\n\nexport const StyleNavLink = styled(NavLink)`\n  position: relative;\n  fill: var(--color-icon);\n  color: var(--color-icon);\n  transition: color var(--transition);\n\n  &:hover {\n    color: var(--hover-color-text);\n  }\n\n  &.active {\n    color: gold;\n  }\n`;\n\nexport const StyeOrderCount = styled.p`\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  right: 0;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  color: white;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 10px;\n  font-weight: bold;\n`;\n","import Container from 'components/Container/Container';\nimport { AiFillHome } from 'react-icons/ai';\nimport { RiShoppingBasketFill } from 'react-icons/ri';\n\nimport {\n  StyleNavigation,\n  NavigationList,\n  NavigationItem,\n  StyleNavLink,\n  StyeOrderCount,\n} from './Navigation.styled';\n\nconst Navigation = ({ orderCount }) => {\n  return (\n    <Container>\n      <StyleNavigation>\n        <NavigationList>\n          <StyleNavLink to=\"/\">\n            <NavigationItem>\n              <AiFillHome size={50} />\n            </NavigationItem>\n          </StyleNavLink>\n          <StyleNavLink to=\"/basket-products\">\n            <StyeOrderCount>{orderCount}</StyeOrderCount>\n            <NavigationItem>\n              <RiShoppingBasketFill size={50} />\n            </NavigationItem>\n          </StyleNavLink>\n        </NavigationList>\n      </StyleNavigation>\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\nimport { GiFullPizza } from 'react-icons/gi';\n\nexport const LogoContainer = styled.div`\n  margin-left: 30px;\n`;\n\nexport const StyleGiFullPizza = styled(GiFullPizza)`\n  color: gold;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const StyleHeader = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 5;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-image: var(--background-header);\n  box-shadow: var(--box-shadow-header);\n`;\n\nexport const NavigationContainer = styled.div`\n  margin-left: auto;\n  margin-right: 40px;\n`;\n","import Navigation from 'components/Navigation/Navigation';\nimport { Link } from 'react-router-dom';\nimport {\n  StyleHeader,\n  NavigationContainer,\n  LogoContainer,\n  StyleGiFullPizza,\n} from './Header.styled';\n\nconst Header = ({ orderCount }) => {\n  return (\n    <StyleHeader>\n      <LogoContainer>\n        <Link to=\"/\">\n          <StyleGiFullPizza size={50}></StyleGiFullPizza>\n        </Link>\n      </LogoContainer>\n      <NavigationContainer>\n        <Navigation orderCount={orderCount} />\n      </NavigationContainer>\n    </StyleHeader>\n  );\n};\n\nexport default Header;\n","import { initializeApp } from '@firebase/app';\nimport { getStorage } from 'firebase/storage';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCpXY9Uqnhz83ego69MeTN9EYgL1QOh2kM',\n  authDomain: 'delivery-app-b3d9f.firebaseapp.com',\n  projectId: 'delivery-app-b3d9f',\n  storageBucket: 'delivery-app-b3d9f.appspot.com',\n  messagingSenderId: '423111518802',\n  appId: '1:423111518802:web:3b5f5b7a5794da46950d8b',\n  databaseURL: 'https://delivery-app-b3d9f.firebaseio.com',\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const firestore = getFirestore(app);\nexport const storage = getStorage(app);\nexport const auth = getAuth(app);\n"],"names":["OrderForm","styled","OrderFormTitle","OrderFormGroup","InputName","InputPhone","InputEmail","InputAdress","HeaderWrapper","HomePageTitle","FoodList","FoodItem","FoodItemImage","InfoFoodWrapper","FoodItemName","FoodItemPrice","ToggleOrder","StyleMdAddShoppingCart","MdAddShoppingCart","StyleOkCheck","RiCheckboxCircleLine","CounterWrapper","BtnIncrement","InputCounter","BtnDecrement","useState","JSON","parse","localStorage","getItem","selectedItems","setSelectedItems","loading","setLoading","count","setCount","productLoading","setProductLoading","orderCount","setOrderCount","userName","email","number","address","formValues","setFormValues","isMounted","useRef","useEffect","getCountOfOrders","q","query","collection","firestore","where","getDocs","querySnapshot","size","console","error","interval","setInterval","clearInterval","current","setItem","stringify","handleOrderToggleFood","itemId","includes","toast","addProductToDb","prev","id","date","Date","formatData","format","prevLoading","selectedItem","delivery","item","addDoc","name","price","image","selected","order","handleInputChange","event","target","value","prevValues","Header","onChange","placeholder","type","pattern","title","required","src","alt","style","color","fontSize","fontWeight","position","zIndex","top","right","onClick","disabled","prevCounts","readOnly","newCount","StyleNavigation","NavigationList","NavigationItem","StyleNavLink","NavLink","StyeOrderCount","Container","to","LogoContainer","StyleGiFullPizza","GiFullPizza","StyleHeader","NavigationContainer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","getFirestore","getStorage","getAuth"],"sourceRoot":""}